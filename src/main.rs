/**
 * main.rs
 *
 * Provided a schema.rs file generated by diesel, further generate boilerplate code.
 * The schema is parsed into a struct(found in parser.rs)
 * which is then used to fill in a given template file
**/
use diesel_schema_parser::{generator, parser, utils};

fn main() {
    let schema_string = utils::open_file("./src/schema.rs");
    let template_string = utils::open_file("./templates/model.txt");
    let models_folder_path = "./src/models";

    let schema = parser::parse_schema(&schema_string).expect("Error parsing your schema!");

    println!("Generating {} models", schema.len());

    let count = generator::generate_models(&template_string, &schema, models_folder_path)
        .expect("Error generating models!");

    println!("Generated {} models", count);
}
